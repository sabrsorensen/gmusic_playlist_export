import mutagen
import os
import unicodedata
import string

__author__ = 'sabrsorensen'


class M3U_Gen:
    def __init__(self, name, musicRoot):
        name = removeDisallowedFilenameChars(name)
        try:
            os.makedirs(os.path.join(musicRoot, "GMusic Exported Playlists"))
        except OSError:
            pass
        self.m3u_out = open(os.path.join(musicRoot, "GMusic Exported Playlists", name + '.m3u'), 'w')
        self.m3u_out.write("#Playlist " + name + " generated by gmusic_playlist_export\n#EXTM3U\n")

    def M3UEntry(self, path):
        audio = mutagen.File(path, easy=True)
        artist = audio['artist'][0]
        title = audio['title'][0]
        length = audio.info.length
        artist = removeDisallowedFilenameChars(artist)
        title = removeDisallowedFilenameChars(title)
        self.m3u_out.write("#EXTINF:%i,%s - %s\n" % (int(length), artist, title))
        self.m3u_out.write(path + "\n")

    def M3UClose(self):
        self.m3u_out.close()

'''Credit to Sophie Gage at http://stackoverflow.com/a/698714 for the below filename sanitation.'''
def removeDisallowedFilenameChars(filename):
    validFilenameChars = "-_.() %s%s" % (string.ascii_letters, string.digits)
    cleanedFilename = unicodedata.normalize('NFKD', filename).encode('ASCII', 'ignore')
    return ''.join(c for c in cleanedFilename if c in validFilenameChars)
